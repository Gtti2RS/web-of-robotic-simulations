services:

  gz_sim:
    image: gz_sim_ros2:0.3
    container_name: Gazebo_ROS2
    build:
      context: .
      dockerfile: Dockerfile.gz
    # Simplest discovery on Linux
    networks: [wos_net]
    environment:
      - TZ=Europe/Berlin
      - ROS_DOMAIN_ID=21
      # Let gz find models/worlds in both Assets and upload:
      - GZ_SIM_RESOURCE_PATH=/project-root/Assets/model:/project-root/Assets/models:/project-root/Assets/worlds:/project-root/upload
      # If you use plugins:
      - GZ_PLUGIN_PATH=/project-root/Assets/plugins:${GZ_PLUGIN_PATH:-}
      # Headless defaults (since you're headless)
      - QT_QPA_PLATFORM=offscreen
    working_dir: /project-root
    volumes:
      - ./:/project-root:rw
    ports:
      - "8090:8090" # gazebo stream port
    # Dev mode: keep container alive without starting services
    command: ["tail", "-f", "/dev/null"]

  wos_server:
    image: wos_server:0.2
    container_name: WoT_Server
    build:
      context: .
      dockerfile: Dockerfile.wos
    networks: [wos_net]
    environment:
      - TZ=Europe/Berlin
      - ROS_DOMAIN_ID=21
      - RMW_IMPLEMENTATION=rmw_fastrtps_cpp
    working_dir: /project-root
    volumes:
     # mount the entire repo so requires to ./library/... work
      - ./:/project-root:rw
      # Use named volume for npm cache to speed up builds
      - npm_cache:/project-root/node_modules
    ports:
      - "8080:8080" # gz_controller
      - "8081:8081" # cs_controller
      - "8082:8082" # backup
      - "8083:8083" # ur10_controller for gazebo
      - "8084:8084" # ur10_controller for coppeliasim
    # Dev mode: keep container alive without starting services
    command: ["tail", "-f", "/dev/null"]

  coppeliasim:
    image: coppeliasim_ros2:0.1
    container_name: CoppeliaSim_ROS2
    build:
      context: .
      dockerfile: Dockerfile.coppelia
    networks: [wos_net]
    environment:
      - TZ=Europe/Berlin
      - ROS_DOMAIN_ID=21
      - RMW_IMPLEMENTATION=rmw_fastrtps_cpp
    volumes:
      - ./:/project-root:rw
    ports:
      - "23020:23020"  # coppeliasim streaming port
      - "23021:23021"  # coppeliasim streaming backup
      - "23022:23022"  # coppeliasim streaming backup
    # Dev mode: keep container alive without starting sim
    command: ["tail", "-f", "/dev/null"]


networks:
  wos_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  npm_cache:
    driver: local
