services:

  Gazebo_ROS2:
    image: gazebo_ros2:1.0
    container_name: Gazebo_ROS2
    build:
      context: .
      dockerfile: Dockerfile.gz
    # Simplest discovery on Linux
    networks: [wos_net]
    environment:
      - TZ=Europe/Berlin
      - ROS_DOMAIN_ID=21
      # Let gz find models/worlds in both Assets and upload:
      - GZ_SIM_RESOURCE_PATH=/project-root/Assets/model:/project-root/Assets/models:/project-root/Assets/worlds:/project-root/upload
      # If you use plugins:
      - GZ_PLUGIN_PATH=/project-root/Assets/plugins:${GZ_PLUGIN_PATH:-}
      # Headless defaults (since you're headless)
      - QT_QPA_PLATFORM=offscreen
    working_dir: /project-root
    volumes:
      - ../:/project-root:rw
    ports:
      - "8090:8090" # gazebo stream port
    # Production: automatically start processsupervisor
    command: ["/usr/local/bin/ros-entrypoint.sh", "ros2", "launch", "sim_process_supervisor", "supervisor.launch.py"]

  WoT_Server:
    image: wot_server:1.0
    container_name: WoT_Server
    build:
      context: .
      dockerfile: Dockerfile.wos
    networks: [wos_net]
    environment:
      - TZ=Europe/Berlin
      - ROS_DOMAIN_ID=21
      - RMW_IMPLEMENTATION=rmw_fastrtps_cpp
    working_dir: /project-root
    volumes:
     # mount the entire repo so requires to ./library/... work
      - ../:/project-root:rw
      # Use named volume for npm cache to speed up builds
      - npm_cache:/project-root/node_modules
    ports:
      - "8080:8080" # gz_controller
      - "8081:8081" # cs_controller
      - "8082:8082" # backup
      - "8083:8083" # ur10_controller for gazebo
      - "8084:8084" # ur10_controller for coppeliasim
    depends_on:
      - Gazebo_ROS2
    # Production: start both gz_controller and cs_controller with delay
    command: ["/project-root/docker/entrypoint-wos.sh"]

  CoppeliaSim_ROS2:
    image: coppeliasim_ros2:1.0
    container_name: CoppeliaSim_ROS2
    build:
      context: .
      dockerfile: Dockerfile.coppelia
    networks: [wos_net]
    environment:
      - TZ=Europe/Berlin
      - ROS_DOMAIN_ID=21
      - RMW_IMPLEMENTATION=rmw_fastrtps_cpp
    volumes:
      - ../:/project-root:rw
    ports:
      - "23020:23020"  # coppeliasim streaming port
      - "23021:23021"  # coppeliasim streaming backup
      - "23022:23022"  # coppeliasim streaming backup
    # tried custom commands, but has conflicts with official entrypoint
    # Currently only works in dev mode, which keeps container alive and waiting for manual start
    command: ["tail", "-f", "/dev/null"]
    

networks:
  wos_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  npm_cache:
    driver: local
