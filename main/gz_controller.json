{
  "$schema": "https://www.w3.org/2022/wot/td/v1.1",
  "title": "gz_controller",
  "id": "urn:dev:wot:simulation-controller",
  "base": "http://localhost:8080/",
  "actions": {
    "publishMessage": {
      "description": "Publish a ROS 2 string message",
      "input": {
        "type": "string"
      }
    },
    "uploadFile": {
      "description": "Upload a file to world/model/launch directory",
      "input": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "target": {
            "type": "string",
            "enum": [
              "world",
              "model",
              "launch"
            ]
          }
        },
        "required": [
          "name",
          "content",
          "target"
        ]
      }
    },
    "launchSimulation": {
      "description": "Launch simulation using 'gz sim' or 'ros2 launch'",
      "input": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "gz",
              "ros2"
            ]
          },
          "fileName": {
            "type": "string"
          },
          "arguments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          }
        },
        "required": [
          "fileName"
        ]
      }
    },
    "exitSimulation": {
      "description": "Stop the currently running simulation"
    },
    "send_ros2_cmd": {
      "description": "Send a full ROS 2 CLI command as a string, starting with 'ros2'",
      "input": {
        "type": "string"
      },
      "output": {
        "type": "object",
        "properties": {
          "lines": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "raw": {
            "type": "string"
          }
        }
      }
    },
    "sim_control": {
      "description": "Control simulation: pause, run, or reset",
      "input": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "enum": [
              "pause",
              "run",
              "reset"
            ]
          }
        },
        "required": [
          "mode"
        ]
      },
      "output": {
        "type": "string"
      }
    },
    "spawn_entity": {
      "title": "Spawn entity",
      "description": "Spawn a new entity from SDF file at a given pose.",
      "input": {
        "type": "object",
        "properties": {
          "entity_name": {
            "type": "string",
            "description": "Entity name"
          },
          "file_name": {
            "type": "string",
            "description": "model file name with extension"
          },
          "position": {
            "type": "object",
            "properties": {
              "x": {
                "type": "number",
                "default": 0
              },
              "y": {
                "type": "number",
                "default": 0
              },
              "z": {
                "type": "number",
                "default": 0
              }
            }
          },
          "orientation": {
            "type": "object",
            "properties": {
              "roll": {
                "type": "number",
                "default": 0
              },
              "pitch": {
                "type": "number",
                "default": 0
              },
              "yaw": {
                "type": "number",
                "default": 0
              }
            },
            "description": "Euler angles in degrees"
          }
        }
      },
      "output": {
        "type": "string"
      }
    },
    "set_entity_pose": {
      "title": "Set entity pose to the given location and orientation ",
      "input": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Entity ID (uint64). If provided, takes precedence over name."
          },
          "name": {
            "type": "string"
          },
          "position": {
            "type": "object",
            "properties": {
              "x": {
                "type": "number"
              },
              "y": {
                "type": "number"
              },
              "z": {
                "type": "number"
              }
            }
          },
          "orientation": {
            "type": "object",
            "properties": {
              "roll": {
                "type": "number",
                "unit": "degree"
              },
              "pitch": {
                "type": "number",
                "unit": "degree"
              },
              "yaw": {
                "type": "number",
                "unit": "degree"
              }
            }
          }
        }
      },
      "output": {
        "type": "string"
      }
    },
    "remove_entity": {
      "title": "Remove an entity",
      "input": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "output": {
        "type": "string"
      }
    },
    "save_world": {
      "description": "Save the current world using the specified file name.",
      "input": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "File name (without extension)"
          }
        },
        "required": [
          "name"
        ]
      },
      "output": {
        "type": "string",
        "description": "Confirmation message"
      }
    },
    "set_visualization": {
      "description": "Toggle visualization when simulation is running",
      "input": {
        "type": "boolean"
      },
      "output": {
        "type": "string"
      }
    },
    "setRtf": {
      "title": "Set Real-Time Factor",
      "input": {
        "type": "object",
        "required": [
          "rtf"
        ],
        "properties": {
          "rtf": {
            "type": "number",
            "minimum": 0.1,
            "maximum": 10.0
          },
          "maxStep": {
            "type": "number",
            "exclusiveMinimum": 0
          }
        }
      }
    }
  },
  "properties": {
    "availableResources": {
      "description": "Lists all available files in resource and upload folders",
      "readOnly": true,
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "properties": {
            "model": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "world": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "launch": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "upload": {
          "type": "object",
          "properties": {
            "model": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "world": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "launch": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "visualization": {
      "type": "boolean",
      "readOnly": true,
      "description": "Enable or disable camera visualization",
      "links": [
        {
          "rel": "alternate",
          "href": "http://192.168.0.3:8081/stream?topic=/camera2",
          "type": "text/html"
        }
      ]
    },
    "sim_stats": {
      "type": "object",
      "readOnly": true,
      "observable": true,
      "description": "Current simulation statistics from ROS2 /world/${world}/stats_json topic",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the message was received"
        },
        "sim_time": {
          "type": "object",
          "description": "Simulation time",
          "properties": {
            "sec": { "type": "integer" },
            "nsec": { "type": "integer" }
          }
        },
        "real_time": {
          "type": "object",
          "description": "Real time",
          "properties": {
            "sec": { "type": "integer" },
            "nsec": { "type": "integer" }
          }
        },
        "paused": {
          "type": "boolean",
          "description": "Whether simulation is paused"
        },
        "iterations": {
          "type": "integer",
          "description": "Number of simulation iterations"
        },
        "real_time_factor": {
          "type": "number",
          "description": "Real-time factor"
        },
        "step_size": {
          "type": "object",
          "description": "Simulation step size",
          "properties": {
            "sec": { "type": "integer" },
            "nsec": { "type": "integer" }
          }
        }
      },
      "forms": [
        {
          "href": "http://localhost:8080/gz_controller/properties/sim_stats",
          "op": ["readproperty"],
          "contentType": "application/json"
        },
        {
          "href": "http://localhost:8080/gz_controller/properties/sim_stats/observable",
          "op": ["observeproperty"],
          "subprotocol": "sse",
          "contentType": "text/event-stream"
        }
      ]
    },
    "poses": {
      "type": "object",
      "readOnly": true,
      "observable": true,
      "description": "Current entity poses from ROS2 /world/${world}/pose/info_json topic",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the message was received"
        },
        "header": {
          "type": "object",
          "description": "Message header with timestamp",
          "properties": {
            "stamp": {
              "type": "object",
              "properties": {
                "sec": { "type": "integer" },
                "nsec": { "type": "integer" }
              }
            }
          }
        },
        "pose": {
          "type": "array",
          "description": "Array of entity poses",
          "items": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "id": { "type": "integer" },
              "position": {
                "type": "object",
                "properties": {
                  "x": { "type": "number" },
                  "y": { "type": "number" },
                  "z": { "type": "number" }
                }
              },
              "orientation": {
                "type": "object",
                "properties": {
                  "x": { "type": "number" },
                  "y": { "type": "number" },
                  "z": { "type": "number" },
                  "w": { "type": "number" }
                }
              }
            }
          }
        }
      },
      "forms": [
        {
          "href": "http://localhost:8080/gz_controller/properties/poses",
          "op": ["readproperty"],
          "contentType": "application/json"
        },
        {
          "href": "http://localhost:8080/gz_controller/properties/poses/observable",
          "op": ["observeproperty"],
          "subprotocol": "sse",
          "contentType": "text/event-stream"
        }
      ]
    },
    "models": {
      "type": "object",
      "readOnly": true,
      "observable": true,
      "description": "Available models extracted from pose data",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the message was received"
        },
        "models": {
          "type": "array",
          "description": "Array of available models",
          "items": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "id": { "type": "integer" }
            }
          }
        },
        "total_count": {
          "type": "integer",
          "description": "Total number of available models"
        }
      },
      "forms": [
        {
          "href": "http://localhost:8080/gz_controller/properties/models",
          "op": ["readproperty"],
          "contentType": "application/json"
        },
        {
          "href": "http://localhost:8080/gz_controller/properties/models/observable",
          "op": ["observeproperty"],
          "subprotocol": "sse",
          "contentType": "text/event-stream"
        }
      ]
    }
  }
}